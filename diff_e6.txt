diff --git a/app/hello/hello.cc b/app/hello/hello.cc
index 40c7c05..82f144c 100644
--- a/app/hello/hello.cc
+++ b/app/hello/hello.cc
@@ -1,12 +1,44 @@
+#include <utility/heap.h>
 #include <utility/ostream.h>
 
 using namespace EPOS;
 
 OStream cout;
 
+
+
 int main()
 {
-    cout << "Hello world!" << endl;
+    cout << "Starting E6b worst fit allocation test" << endl;
+
+    const unsigned int HEAP_SIZE = 4096*2;
+    char heap_buffer[HEAP_SIZE];
+
+   
+    Heap heap(heap_buffer, HEAP_SIZE);
 
+    char **array = new char*[3];
+    cout << "Initial address of the array: " << array << endl;
+
+    array[0] = reinterpret_cast<char *>(heap.alloc(1024));
+    cout << "Allocating 1024 bytes - array[0] = " << static_cast<void*>(array[0]) << endl;
+    array[1] = reinterpret_cast<char *>(heap.alloc(2048));
+    cout << "Allocating 2048 bytes - array[1] = " << static_cast<void*>(array[1]) << endl;
+    array[2] = reinterpret_cast<char *>(heap.alloc(3072));
+    cout << "Allocating 3072 bytes - array[2] = " << static_cast<void*>(array[2]) << endl;
+    
+    heap.free(reinterpret_cast<void *>(array[1]), 2048);
+    cout << "After freeing array[1], heap size = " << heap.grouped_size() << " bytes" << endl;
+
+    array[1] = reinterpret_cast<char *>(heap.alloc(512));
+    cout << "Allocating 512 bytes - array[1] = " << static_cast<void*>(array[1]) << endl;
+    cout << "Heap size: " << heap.grouped_size() << " bytes" << endl;
+
+    heap.free(reinterpret_cast<void *>(array[0]), 1024);
+    heap.free(reinterpret_cast<void *>(array[1]), 512);
+    heap.free(reinterpret_cast<void *>(array[2]), 3072);
+    
+    cout << "After freeing array[0] to array[2], heap size = " << heap.grouped_size() << " bytes" << endl;
     return 0;
 }
+
diff --git a/include/utility/list.h b/include/utility/list.h
index 0bd7675..90ce07b 100644
--- a/include/utility/list.h
+++ b/include/utility/list.h
@@ -1346,6 +1346,7 @@ public:
 
     unsigned long grouped_size() const { return _grouped_size; }
 
+    /* FIRST FIT */ /*
     Element * search_size(unsigned long s) {
         Element * e = head();
         if(sizeof(Object_Type) < sizeof(Element))
@@ -1353,8 +1354,23 @@ public:
         else
             for(; e && (e->size() < s); e = e->next());
         return e;
+    } */
+    
+    /* WORST FIT */
+    Element * search_size(unsigned long s) {
+        Element * e = head();
+        Element * worst_e = nullptr;
+        while (e) {
+            // 1º Verifica se o tamanho do bloco livre atual é >= ao tamanho desejado
+            // 2º Verifica se o tamanho do bloco livre atual é o maior encontrado até então
+            // Caso contrário, o "worst block" passa a ser o encontrado
+            if (e->size() >= s && (!worst_e || e->size() > worst_e->size()))
+                worst_e = e;
+            e = e->next();
+        }
+        return worst_e;
     }
-
+    
     void insert_merging(Element * e, Element ** m1, Element ** m2) {
         db<Lists>(TRC) << "Grouping_List::insert_merging(e=" << e << ")" << endl;
 
diff --git a/makedefs b/makedefs
index 749ef3b..fcf6711 100644
--- a/makedefs
+++ b/makedefs
@@ -100,8 +100,10 @@ UUID		= $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
 ia32_COMP_PREFIX	:= /usr/bin/x86_64-linux-gnu-
 armv7_COMP_PREFIX	:= /usr/bin/arm-none-eabi-
 armv8_COMP_PREFIX	:= /usr/bin/aarch64-linux-gnu-
-rv32_COMP_PREFIX	:= /home/ubuntu/Desktop/SO2/riscv_prefix/bin/riscv64-unknown-linux-gnu-
-rv64_COMP_PREFIX	:= /home/ubuntu/Desktop/SO2/riscv_prefix/bin/riscv64-unknown-linux-gnu-
+#rv32_COMP_PREFIX	:= /home/ubuntu/Desktop/SO2/riscv_prefix/bin/riscv64-unknown-linux-gnu-
+#rv64_COMP_PREFIX	:= /home/ubuntu/Desktop/SO2/riscv_prefix/bin/riscv64-unknown-linux-gnu-
+rv32_COMP_PREFIX	:= /home/larissagr/riscv_fin/bin/riscv32-unknown-linux-gnu-
+rv64_COMP_PREFIX	:= /home/larissagr/Documentos/UFSC/UFSC2023/SO2/riscv64/bin/riscv64-unknown-linux-gnu-
 
 COMP_PREFIX		= $($(ARCH)_COMP_PREFIX)
 
